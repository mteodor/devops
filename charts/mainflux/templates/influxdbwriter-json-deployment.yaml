# Copyright (c) Mainflux
# SPDX-License-Identifier: Apache-2.0
{{- if .Values.influxdbjson.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-influxdb-json-writer-config
data:
  subjects.toml: |
    # If you want to listen on all subjects, just pass one element ["channels.>"], otherwise
    # pass the list of subjects (e.g ["channels.<channel_id>", "channels.<channel_id>.sub.topic.x", ...]).
    [subjects]
    filter = ["channels.>"]
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-influxdb-json-writer
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}
      component: influxdb-json-writer
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        component: influxdb-json-writer
    spec:
      containers:
        - env:
            - name: MF_INFLUX_WRITER_LOG_LEVEL
              value: debug
            - name: MF_NATS_URL
              value: nats://{{ .Release.Name }}-nats-client:{{ .Values.defaults.natsPort }}
            - name: MF_INFLUX_WRITER_PORT
              value: "{{ .Values.influxdbjson.writer.httpPort }}"
            - name: MF_INFLUX_WRITER_BATCH_SIZE
              value: "5000"
            - name: MF_INFLUX_WRITER_BATCH_TIMEOUT
              value: "5"
            - name: MF_INFLUX_WRITER_DB
              value: "{{ .Values.influxdbjson.database }}"
            - name: MF_INFLUX_WRITER_DB_USER
              value: "{{ .Values.influxdbjson.adminUser.name }}"
            - name: MF_INFLUX_WRITER_DB_PASS
              value: "{{ .Values.influxdbjson.adminUser.pwd }}"
            - name: MF_INFLUX_WRITER_DB_HOST
              value: {{ .Release.Name }}-influxdb
            - name: MF_INFLUX_WRITER_DB_PORT
              value: "{{ .Values.influxdbjson.dbPort }}"
            - name: MF_INFLUX_WRITER_CONFIG_PATH
              value: "{{ .Values.influxdbjson.configPath }}"
            - name: MF_INFLUX_WRITER_CONTENT_TYPE
              value: "{{ .Values.influxdbjson.contentType }}"
            - name: MF_INFLUX_WRITER_TRANSFORMER
              value: "{{ .Values.influxdbjson.transformer }}"
            - name: MF_OIDC
              value: "{{ .Values.oidc.enabled }}"              
          image: "{{ default .Values.defaults.image.repository .Values.influxdbjson.writer.image.repository }}/influxdb-writer:{{ default .Values.defaults.image.tag .Values.influxdbjson.writer.image.tag }}"
          imagePullPolicy: {{ default .Values.defaults.image.pullPolicy .Values.influxdbjson.writer.image.pullPolicy }}
          name: {{ .Release.Name }}-influxdb-json-writer
          ports:
            - containerPort: {{ .Values.influxdbjson.writer.httpPort }}
              protocol: TCP
          stdin: true
          tty: true
          volumeMounts:
            - mountPath: /config/subjects.toml
              name: influxdb-json-writer-config
              subPath: subjects.toml
      imagePullSecrets:
      - name: regcred
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
        - configMap:
            defaultMode: 256
            name: {{ .Release.Name }}-influxdb-json-writer-config
            optional: false
          name: influxdb-json-writer-config
{{- end }}

